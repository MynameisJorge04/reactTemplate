{"ast":null,"code":"var _jsxFileName = \"/home/jorgebg/personalProjects/cursoReact/cursoReactIntroduccion/todo-machine/src/TodoSearch/index.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { TodoContext } from '../TodoContext';\nimport './TodoSearch.css';\n\n//NOs deben enviar dos props para seguir leyendo a traves de la app principal\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction TodoSearch() {\n  _s();\n  const {\n    searchValue,\n    setSearchValue\n  } = React.useContext(TodoContext);\n  //Esta es la forma de llamar a los estados para react con esto podemos tomar en cuenta la realizacion de  nuestro estado\n  //Devolvemos un valor search del input y tambien una funcion que cambia con un string en cada valor\n  const [] = React.useState('');\n\n  //Obtenemos el valor de nuestro input esto es a traves de un parametro\n\n  const onSearchValueChange = event => {\n    //Esta propiedas saca a traves del metodoOnchange el valor que tiene el input con nuestro target\n    console.log(event.target.value);\n    setSearchValue(event.target.value);\n  };\n\n  //Esta es una forma de enviar componenetes o etiquetas para react en este caso lo hicimos con arrays:\n  return /*#__PURE__*/_jsxDEV(\"input\", {\n    className: \"TodoSearch\",\n    placeholder: \"Buscar tareas\"\n    //Ocupamos declarar el valor del iinput interpretado por el estado\n    ,\n    value: searchValue\n    //Cada cambio que hay de un usuario propiedad de cambio\n    ,\n    onChange: onSearchValueChange\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 9\n  }, this);\n}\n_s(TodoSearch, \"SxThZixqUY0r3Fs2TGOlBPyNXOY=\");\n_c = TodoSearch;\nexport { TodoSearch };\nvar _c;\n$RefreshReg$(_c, \"TodoSearch\");","map":{"version":3,"names":["React","TodoContext","TodoSearch","searchValue","setSearchValue","useContext","useState","onSearchValueChange","event","console","log","target","value"],"sources":["/home/jorgebg/personalProjects/cursoReact/cursoReactIntroduccion/todo-machine/src/TodoSearch/index.js"],"sourcesContent":["import React from 'react';\nimport { TodoContext } from '../TodoContext';\nimport './TodoSearch.css';\n\n//NOs deben enviar dos props para seguir leyendo a traves de la app principal\nfunction TodoSearch(){\n    const {searchValue, setSearchValue} = React.useContext(TodoContext);\n    //Esta es la forma de llamar a los estados para react con esto podemos tomar en cuenta la realizacion de  nuestro estado\n    //Devolvemos un valor search del input y tambien una funcion que cambia con un string en cada valor\n    const [] = React.useState('');\n\n    //Obtenemos el valor de nuestro input esto es a traves de un parametro\n    \n    const onSearchValueChange = (event) =>{\n        //Esta propiedas saca a traves del metodoOnchange el valor que tiene el input con nuestro target\n        console.log(event.target.value);\n        setSearchValue(event.target.value);\n    }\n\n    //Esta es una forma de enviar componenetes o etiquetas para react en este caso lo hicimos con arrays:\n    return(\n        <input \n        className='TodoSearch' \n        placeholder=\"Buscar tareas\" \n        //Ocupamos declarar el valor del iinput interpretado por el estado\n        value={searchValue}\n        //Cada cambio que hay de un usuario propiedad de cambio\n        onChange={onSearchValueChange}\n        />\n    );\n}\n\nexport { TodoSearch };"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,WAAW,QAAQ,gBAAgB;AAC5C,OAAO,kBAAkB;;AAEzB;AAAA;AACA,SAASC,UAAU,GAAE;EAAA;EACjB,MAAM;IAACC,WAAW;IAAEC;EAAc,CAAC,GAAGJ,KAAK,CAACK,UAAU,CAACJ,WAAW,CAAC;EACnE;EACA;EACA,MAAM,EAAE,GAAGD,KAAK,CAACM,QAAQ,CAAC,EAAE,CAAC;;EAE7B;;EAEA,MAAMC,mBAAmB,GAAIC,KAAK,IAAI;IAClC;IACAC,OAAO,CAACC,GAAG,CAACF,KAAK,CAACG,MAAM,CAACC,KAAK,CAAC;IAC/BR,cAAc,CAACI,KAAK,CAACG,MAAM,CAACC,KAAK,CAAC;EACtC,CAAC;;EAED;EACA,oBACI;IACA,SAAS,EAAC,YAAY;IACtB,WAAW,EAAC;IACZ;IAAA;IACA,KAAK,EAAET;IACP;IAAA;IACA,QAAQ,EAAEI;EAAoB;IAAA;IAAA;IAAA;EAAA,QAC5B;AAEV;AAAC,GAzBQL,UAAU;AAAA,KAAVA,UAAU;AA2BnB,SAASA,UAAU;AAAG;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}