{"ast":null,"code":"var _jsxFileName = \"/home/jorgebg/personalProjects/cursoReact/cursoReactIntroduccion/todo-machine/src/TodoContext/useLocalStorage.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { TodoContext } from '../TodoContext';\nimport { TodoCounter } from '../TodoCounter';\nimport { TodoSearch } from '../TodoSearch';\nimport { TodoList } from '../TodoList';\nimport { TodoItem } from '../TodoItem';\nimport { CreateTodoButton } from '../CreateTodoButton';\nimport { Modal } from '../Modal';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction AppUI() {\n  _s();\n  var _searchedTodos$;\n  const {\n    error,\n    loading,\n    searchedTodos,\n    completeTodo,\n    deleteTodo,\n    openModal,\n    setOpenModal\n  } = React.useContext(TodoContext);\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(TodoCounter, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TodoSearch, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TodoList, {\n      children: [error && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Desesp\\xE9rate, hubo un error...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 19\n      }, this), loading && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Estamos cargando, no desesperes...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 21\n      }, this), !loading && !searchedTodos.length && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"\\xA1Crea tu primer TODO!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 49\n      }, this), searchedTodos.map(todo => /*#__PURE__*/_jsxDEV(TodoItem, {\n        text: todo.text,\n        completed: todo.completed,\n        onComplete: () => completeTodo(todo.text),\n        onDelete: () => deleteTodo(todo.text)\n      }, todo.text, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), !!openModal && /*#__PURE__*/_jsxDEV(Modal, {\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: (_searchedTodos$ = searchedTodos[0]) === null || _searchedTodos$ === void 0 ? void 0 : _searchedTodos$.text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(CreateTodoButton, {\n      setOpenModal: setOpenModal\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n}\n_s(AppUI, \"rs8X1J1GPTuG9v9tpIblLE8Lo1c=\");\n_c = AppUI;\nexport { AppUI };\n\n// import React from 'react';\n\n// //Podemos empezar a hacer hoooks como queramos\n\n// function useLocalStorage(itemName, initialValue) {\n//     //Cuando tengamos algo de infromaicon dentro de nuestro estado porque ya acabo de cargar entonces pasamos a la aplicacion\n//     const [loading, setLoading] = React.useState(true);\n\n//     //Cuando tengamos algo de infromaicon dentro de nuestro estado porque ya acabo de cargar entonces pasamos a la aplicacion\n//     const [error, setError] = React.useState(false);\n\n//     //Ya no traeremos por defecto la informacacion storage si nho lo definido\n//     const [item, setItem] = React.useState(initialValue);\n\n//     //Lo que haremos es simular que tardara un rato en llegar\n//     React.useEffect(() => {\n//       //Cantidad de tiempo hasta ejecutar la funcion\n//       setTimeout(() => {\n//         //Vamos a hacer un try catch, que consiste en una condicion de error, y ejecuta cierta parte de codigo\n\n//         try{\n//           //Casi siempre las APIS tienen ciertas versiones\n//         const localStorageItem = localStorage.getItem(itemName);\n\n//         //Crear un primer array vacio con cosas vacias, tenbemos que traer la info guardada en local storage\n//         let parsedItem = initialValue;\n\n//         //Vemos si tiene informacion\n//         if (!localStorageItem) {\n//           //Por defecto una lista de todos necesitamos enmviar un string\n//           localStorage.setItem(itemName, JSON.stringify(initialValue));\n//           parsedItem = [];\n//         }\n\n//         //Ya tiene algunos todos\n//         else {\n//           parsedItem = JSON.parse(localStorageItem);\n//         }\n\n//         //Nuestro estado es el inical al tener un array vacio, lo que hace es dar el nuevo valor en localstorage\n//         setTimeout(parsedItem);\n//         setLoading(false);\n//         } catch(error){\n//           //Tomamos en cuenta que los errores son falsos\n//           setError(error);\n//         }\n\n//       }, 1000);\n//     });\n\n//     //Para la persistencia cada cambio debemos llamar nuestro local storage para persistencia\n//     const savedItem = (newItem) => {\n//       //Envolvemos a nuestros items por si hay algun error tambien\n//       try{\n//         //HAY QUE PERSISTIR la informacion\n//       const stringifiedItem = JSON.stringify(newItem);\n//       //GUardamos nuestra cadena\n//       localStorage.setItem(itemName, stringifiedItem);\n//       //Debemos evitar la actualizacion de la pagina\n//       setItem(newItem);\n//       } catch(error){\n//         setError(error);\n//       }\n//     };\n\n//     //Necesitamos retornar localStorage, es importante tomar en cuenta que si hay mas estados que dos en un hook devolvemos un objeto\n//     return {\n//       item, \n//       savedItem, \n//       loading,\n//       error,\n//     };\n//   }\n\n//   export { useLocalStorage };\nvar _c;\n$RefreshReg$(_c, \"AppUI\");","map":{"version":3,"names":["React","TodoContext","TodoCounter","TodoSearch","TodoList","TodoItem","CreateTodoButton","Modal","AppUI","error","loading","searchedTodos","completeTodo","deleteTodo","openModal","setOpenModal","useContext","length","map","todo","text","completed"],"sources":["/home/jorgebg/personalProjects/cursoReact/cursoReactIntroduccion/todo-machine/src/TodoContext/useLocalStorage.js"],"sourcesContent":["import React from 'react';\nimport { TodoContext } from '../TodoContext';\nimport { TodoCounter } from '../TodoCounter';\nimport { TodoSearch } from '../TodoSearch';\nimport { TodoList } from '../TodoList';\nimport { TodoItem } from '../TodoItem';\nimport { CreateTodoButton } from '../CreateTodoButton';\nimport { Modal } from '../Modal';\n\nfunction AppUI() {\n  const {\n    error,\n    loading,\n    searchedTodos,\n    completeTodo,\n    deleteTodo,\n    openModal,\n    setOpenModal,\n  } = React.useContext(TodoContext);\n  \n  return (\n    <React.Fragment>\n      <TodoCounter />\n      <TodoSearch />\n\n      <TodoList>\n        {error && <p>Desespérate, hubo un error...</p>}\n        {loading && <p>Estamos cargando, no desesperes...</p>}\n        {(!loading && !searchedTodos.length) && <p>¡Crea tu primer TODO!</p>}\n        \n        {searchedTodos.map(todo => (\n          <TodoItem\n            key={todo.text}\n            text={todo.text}\n            completed={todo.completed}\n            onComplete={() => completeTodo(todo.text)}\n            onDelete={() => deleteTodo(todo.text)}\n          />\n        ))}\n      </TodoList>\n\n      {!!openModal && (\n        <Modal>\n          <p>{searchedTodos[0]?.text}</p>\n        </Modal>\n      )}\n\n      <CreateTodoButton\n        setOpenModal={setOpenModal}\n      />\n    </React.Fragment>\n  );\n}\n\nexport { AppUI };\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n// import React from 'react';\n\n// //Podemos empezar a hacer hoooks como queramos\n\n// function useLocalStorage(itemName, initialValue) {\n//     //Cuando tengamos algo de infromaicon dentro de nuestro estado porque ya acabo de cargar entonces pasamos a la aplicacion\n//     const [loading, setLoading] = React.useState(true);\n  \n//     //Cuando tengamos algo de infromaicon dentro de nuestro estado porque ya acabo de cargar entonces pasamos a la aplicacion\n//     const [error, setError] = React.useState(false);\n  \n//     //Ya no traeremos por defecto la informacacion storage si nho lo definido\n//     const [item, setItem] = React.useState(initialValue);\n  \n//     //Lo que haremos es simular que tardara un rato en llegar\n//     React.useEffect(() => {\n//       //Cantidad de tiempo hasta ejecutar la funcion\n//       setTimeout(() => {\n//         //Vamos a hacer un try catch, que consiste en una condicion de error, y ejecuta cierta parte de codigo\n  \n//         try{\n//           //Casi siempre las APIS tienen ciertas versiones\n//         const localStorageItem = localStorage.getItem(itemName);\n  \n//         //Crear un primer array vacio con cosas vacias, tenbemos que traer la info guardada en local storage\n//         let parsedItem = initialValue;\n  \n//         //Vemos si tiene informacion\n//         if (!localStorageItem) {\n//           //Por defecto una lista de todos necesitamos enmviar un string\n//           localStorage.setItem(itemName, JSON.stringify(initialValue));\n//           parsedItem = [];\n//         }\n  \n//         //Ya tiene algunos todos\n//         else {\n//           parsedItem = JSON.parse(localStorageItem);\n//         }\n  \n//         //Nuestro estado es el inical al tener un array vacio, lo que hace es dar el nuevo valor en localstorage\n//         setTimeout(parsedItem);\n//         setLoading(false);\n//         } catch(error){\n//           //Tomamos en cuenta que los errores son falsos\n//           setError(error);\n//         }\n  \n//       }, 1000);\n//     });\n  \n  \n  \n//     //Para la persistencia cada cambio debemos llamar nuestro local storage para persistencia\n//     const savedItem = (newItem) => {\n//       //Envolvemos a nuestros items por si hay algun error tambien\n//       try{\n//         //HAY QUE PERSISTIR la informacion\n//       const stringifiedItem = JSON.stringify(newItem);\n//       //GUardamos nuestra cadena\n//       localStorage.setItem(itemName, stringifiedItem);\n//       //Debemos evitar la actualizacion de la pagina\n//       setItem(newItem);\n//       } catch(error){\n//         setError(error);\n//       }\n//     };\n  \n//     //Necesitamos retornar localStorage, es importante tomar en cuenta que si hay mas estados que dos en un hook devolvemos un objeto\n//     return {\n//       item, \n//       savedItem, \n//       loading,\n//       error,\n//     };\n//   }\n\n//   export { useLocalStorage };"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,WAAW,QAAQ,gBAAgB;AAC5C,SAASC,WAAW,QAAQ,gBAAgB;AAC5C,SAASC,UAAU,QAAQ,eAAe;AAC1C,SAASC,QAAQ,QAAQ,aAAa;AACtC,SAASC,QAAQ,QAAQ,aAAa;AACtC,SAASC,gBAAgB,QAAQ,qBAAqB;AACtD,SAASC,KAAK,QAAQ,UAAU;AAAC;AAEjC,SAASC,KAAK,GAAG;EAAA;EAAA;EACf,MAAM;IACJC,KAAK;IACLC,OAAO;IACPC,aAAa;IACbC,YAAY;IACZC,UAAU;IACVC,SAAS;IACTC;EACF,CAAC,GAAGf,KAAK,CAACgB,UAAU,CAACf,WAAW,CAAC;EAEjC,oBACE,QAAC,KAAK,CAAC,QAAQ;IAAA,wBACb,QAAC,WAAW;MAAA;MAAA;MAAA;IAAA,QAAG,eACf,QAAC,UAAU;MAAA;MAAA;MAAA;IAAA,QAAG,eAEd,QAAC,QAAQ;MAAA,WACNQ,KAAK,iBAAI;QAAA,UAAG;MAA6B;QAAA;QAAA;QAAA;MAAA,QAAI,EAC7CC,OAAO,iBAAI;QAAA,UAAG;MAAkC;QAAA;QAAA;QAAA;MAAA,QAAI,EACnD,CAACA,OAAO,IAAI,CAACC,aAAa,CAACM,MAAM,iBAAK;QAAA,UAAG;MAAqB;QAAA;QAAA;QAAA;MAAA,QAAI,EAEnEN,aAAa,CAACO,GAAG,CAACC,IAAI,iBACrB,QAAC,QAAQ;QAEP,IAAI,EAAEA,IAAI,CAACC,IAAK;QAChB,SAAS,EAAED,IAAI,CAACE,SAAU;QAC1B,UAAU,EAAE,MAAMT,YAAY,CAACO,IAAI,CAACC,IAAI,CAAE;QAC1C,QAAQ,EAAE,MAAMP,UAAU,CAACM,IAAI,CAACC,IAAI;MAAE,GAJjCD,IAAI,CAACC,IAAI;QAAA;QAAA;QAAA;MAAA,QAMjB,CAAC;IAAA;MAAA;MAAA;MAAA;IAAA,QACO,EAEV,CAAC,CAACN,SAAS,iBACV,QAAC,KAAK;MAAA,uBACJ;QAAA,6BAAIH,aAAa,CAAC,CAAC,CAAC,oDAAhB,gBAAkBS;MAAI;QAAA;QAAA;QAAA;MAAA;IAAK;MAAA;MAAA;MAAA;IAAA,QAElC,eAED,QAAC,gBAAgB;MACf,YAAY,EAAEL;IAAa;MAAA;MAAA;MAAA;IAAA,QAC3B;EAAA;IAAA;IAAA;IAAA;EAAA,QACa;AAErB;AAAC,GA3CQP,KAAK;AAAA,KAALA,KAAK;AA6Cd,SAASA,KAAK;;AAgBd;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}