{"ast":null,"code":"import React from'react';import{TodoContext}from'../TodoContext';import'./TodoSearch.css';//NOs deben enviar dos props para seguir leyendo a traves de la app principal\nimport{jsx as _jsx}from\"react/jsx-runtime\";function TodoSearch(){var _React$useContext=React.useContext(TodoContext),searchValue=_React$useContext.searchValue,setSearchValue=_React$useContext.setSearchValue;//Esta es la forma de llamar a los estados para react con esto podemos tomar en cuenta la realizacion de  nuestro estado\n//Devolvemos un valor search del input y tambien una funcion que cambia con un string en cada valor\n//Obtenemos el valor de nuestro input esto es a traves de un parametro\nvar onSearchValueChange=function onSearchValueChange(event){//Esta propiedas saca a traves del metodoOnchange el valor que tiene el input con nuestro target\nconsole.log(event.target.value);setSearchValue(event.target.value);};//Esta es una forma de enviar componenetes o etiquetas para react en este caso lo hicimos con arrays:\nreturn/*#__PURE__*/_jsx(\"input\",{className:\"TodoSearch\",placeholder:\"Buscar tareas\"//Ocupamos declarar el valor del iinput interpretado por el estado\n,value:searchValue//Cada cambio que hay de un usuario propiedad de cambio\n,onChange:onSearchValueChange});}export{TodoSearch};","map":{"version":3,"names":["React","TodoContext","TodoSearch","useContext","searchValue","setSearchValue","onSearchValueChange","event","console","log","target","value"],"sources":["/home/jorgebg/personalProjects/cursoReact/cursoReactIntroduccion/todo-machine/src/TodoSearch/index.js"],"sourcesContent":["import React from 'react';\nimport { TodoContext } from '../TodoContext';\nimport './TodoSearch.css';\n\n//NOs deben enviar dos props para seguir leyendo a traves de la app principal\nfunction TodoSearch(){\n    const {searchValue, setSearchValue} = React.useContext(TodoContext);\n    //Esta es la forma de llamar a los estados para react con esto podemos tomar en cuenta la realizacion de  nuestro estado\n    //Devolvemos un valor search del input y tambien una funcion que cambia con un string en cada valor\n\n    //Obtenemos el valor de nuestro input esto es a traves de un parametro\n    \n    const onSearchValueChange = (event) =>{\n        //Esta propiedas saca a traves del metodoOnchange el valor que tiene el input con nuestro target\n        console.log(event.target.value);\n        setSearchValue(event.target.value);\n    }\n\n    //Esta es una forma de enviar componenetes o etiquetas para react en este caso lo hicimos con arrays:\n    return(\n        <input \n        className='TodoSearch' \n        placeholder=\"Buscar tareas\" \n        //Ocupamos declarar el valor del iinput interpretado por el estado\n        value={searchValue}\n        //Cada cambio que hay de un usuario propiedad de cambio\n        onChange={onSearchValueChange}\n        />\n    );\n}\n\nexport { TodoSearch };"],"mappings":"AAAA,MAAOA,MAAK,KAAM,OAAO,CACzB,OAASC,WAAW,KAAQ,gBAAgB,CAC5C,MAAO,kBAAkB,CAEzB;AAAA,2CACA,QAASC,WAAU,EAAE,CACjB,sBAAsCF,KAAK,CAACG,UAAU,CAACF,WAAW,CAAC,CAA5DG,WAAW,mBAAXA,WAAW,CAAEC,cAAc,mBAAdA,cAAc,CAClC;AACA;AAEA;AAEA,GAAMC,oBAAmB,CAAG,QAAtBA,oBAAmB,CAAIC,KAAK,CAAI,CAClC;AACAC,OAAO,CAACC,GAAG,CAACF,KAAK,CAACG,MAAM,CAACC,KAAK,CAAC,CAC/BN,cAAc,CAACE,KAAK,CAACG,MAAM,CAACC,KAAK,CAAC,CACtC,CAAC,CAED;AACA,mBACI,cACA,SAAS,CAAC,YAAY,CACtB,WAAW,CAAC,eACZ;AAAA,CACA,KAAK,CAAEP,WACP;AAAA,CACA,QAAQ,CAAEE,mBAAoB,EAC5B,CAEV,CAEA,OAASJ,UAAU"},"metadata":{},"sourceType":"module","externalDependencies":[]}