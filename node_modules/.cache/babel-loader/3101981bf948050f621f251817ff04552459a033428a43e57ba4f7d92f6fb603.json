{"ast":null,"code":"var _jsxFileName = \"/home/jorgebg/personalProjects/cursoReact/cursoReactIntroduccion/todo-machine/src/App.js\";\n//pedimos a react que nos haga un paquete invisible\nimport React from 'react';\nimport react from 'react';\n//import './App.css';\n\n//Ejemplo: tenemos una url \n//const url = \"https://.jpg\" podemos remplazar con el nombre de la variable\n\n//Esto se traduce a una clase en un div, que solo son llamados a react\n//Podemos obtener parametros de elementos desde nuestro index.js observamos que hay buenos\n//mensajes existentes\n\n//Lista falsa de todos\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst todos = [{\n  text: 'Cortar cebolla',\n  completed: false\n}, {\n  text: 'Tomar curso intro eact',\n  completed: false\n}, {\n  text: 'Llorar con la lloran',\n  completed: false\n}];\nfunction App() {\n  return (\n    /*#__PURE__*/\n    //Soporta un componente solamente\n    _jsxDEV(React.Fragment, {\n      children: [\"//Para evitar confusiones no se debe dar class si no que se da con class name evitar clases de js //La magia de JSX es las propiedades que hay //Poner nuestros elementos //Todocounter es el que marcara el numero de todos completados\", /*#__PURE__*/_jsxDEV(TodoCounter, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 5\n      }, this), \"//El input de busqueda que escribamos\", /*#__PURE__*/_jsxDEV(TodoSearch, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 5\n      }, this), \"//COntenedor de todos con lista //Tenemos nuestro componente que sera el recursivo reutilizable, utilizando map rendrizando\", /*#__PURE__*/_jsxDEV(TodoList, {\n        children: todos.map(todo => /*#__PURE__*/_jsxDEV(TodoItem, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 9\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(CreateTodoButton, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 5\n    }, this)\n  );\n}\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","react","todos","text","completed","App","map","todo"],"sources":["/home/jorgebg/personalProjects/cursoReact/cursoReactIntroduccion/todo-machine/src/App.js"],"sourcesContent":["//pedimos a react que nos haga un paquete invisible\nimport React from 'react';\nimport react from 'react';\n//import './App.css';\n\n//Ejemplo: tenemos una url \n//const url = \"https://.jpg\" podemos remplazar con el nombre de la variable\n\n//Esto se traduce a una clase en un div, que solo son llamados a react\n//Podemos obtener parametros de elementos desde nuestro index.js observamos que hay buenos\n//mensajes existentes\n\n//Lista falsa de todos\n\nconst todos = [\n  {text: 'Cortar cebolla', completed: false},\n  {text: 'Tomar curso intro eact', completed: false},\n  {text: 'Llorar con la lloran', completed: false}\n];\n\nfunction App() {\n  return (\n    //Soporta un componente solamente\n    \n    <React.Fragment>\n    //Para evitar confusiones no se debe dar class si no que se da con class name evitar clases de js\n    //La magia de JSX es las propiedades que hay\n\n    //Poner nuestros elementos\n    //Todocounter es el que marcara el numero de todos completados\n    <TodoCounter/>\n\n    //El input de busqueda que escribamos\n    <TodoSearch/>\n\n    //COntenedor de todos con lista\n    //Tenemos nuestro componente que sera el recursivo reutilizable, utilizando map rendrizando\n    <TodoList>\n      \n      {todos.map(todo => (\n        <TodoItem/>\n      ))}\n      \n    </TodoList>\n\n    <CreateTodoButton/>\n    </React.Fragment>\n    );\n\n    \n}\n\nexport default App;\n"],"mappings":";AAAA;AACA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,KAAK,MAAM,OAAO;AACzB;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AAAA;AAEA,MAAMC,KAAK,GAAG,CACZ;EAACC,IAAI,EAAE,gBAAgB;EAAEC,SAAS,EAAE;AAAK,CAAC,EAC1C;EAACD,IAAI,EAAE,wBAAwB;EAAEC,SAAS,EAAE;AAAK,CAAC,EAClD;EAACD,IAAI,EAAE,sBAAsB;EAAEC,SAAS,EAAE;AAAK,CAAC,CACjD;AAED,SAASC,GAAG,GAAG;EACb;IAAA;IACE;IAEA,QAAC,KAAK,CAAC,QAAQ;MAAA,WAAC,0OAMhB,uBAAC,WAAW;QAAA;QAAA;QAAA;MAAA,QAAE,yCAGd,uBAAC,UAAU;QAAA;QAAA;QAAA;MAAA,QAAE,+HAIb,uBAAC,QAAQ;QAAA,UAENH,KAAK,CAACI,GAAG,CAACC,IAAI,iBACb,QAAC,QAAQ;UAAA;UAAA;UAAA;QAAA,QACV;MAAC;QAAA;QAAA;QAAA;MAAA,QAEO,eAEX,QAAC,gBAAgB;QAAA;QAAA;QAAA;MAAA,QAAE;IAAA;MAAA;MAAA;MAAA;IAAA;EACF;AAIrB;AAAC,KA9BQF,GAAG;AAgCZ,eAAeA,GAAG;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}