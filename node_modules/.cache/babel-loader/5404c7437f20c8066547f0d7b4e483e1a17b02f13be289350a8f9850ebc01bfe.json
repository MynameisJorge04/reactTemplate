{"ast":null,"code":"var _jsxFileName = \"/home/jorgebg/personalProjects/cursoReact/cursoReactIntroduccion/todo-machine/src/App/AppUI.js\";\nimport React from \"react\";\nimport { TodoContext } from \"../TodoContext\";\nimport { TodoCounter } from '../TodoCounter';\nimport { TodoItem } from '../TodoItem';\nimport { TodoSearch } from '../TodoSearch';\nimport { TodoList } from '../TodoList';\nimport { CreateTodoButton } from '../CreateTodoButton';\nimport { TodoHeader } from '../TodoHeader';\n\n//Podemos tener un envolvimiento de propos con reactcontext\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction AppUI() {\n  return (\n    /*#__PURE__*/\n    //Soporta un componente solamente\n    //Esta etiqueta nos funciona para calculos internos solo enviamos una etiqueta por componente envolver para quitar cantidad divs\n    //Para comentar o poner javascript con las {} claves\n    _jsxDEV(React.Fragment, {\n      children: [\n      /*#__PURE__*/\n      //Para evitar confusiones no se debe dar class si no que se da con class name evitar clases de js\n      //La magia de JSX es las propiedades que hay\n      _jsxDEV(TodoHeader, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 5\n      }, this)\n      //Poner nuestros elementos\n      //Todocounter es el que marcara el numero de todos completados\n      , /*#__PURE__*/_jsxDEV(TodoCounter, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(TodoSearch, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(TodoContext.Consumer, {\n        children: _ref => {\n          let {\n            error,\n            loading,\n            searchedTodos,\n            completeTodos,\n            deleteTodos\n          } = _ref;\n          return /*#__PURE__*/_jsxDEV(TodoList, {\n            children: [\n            //Controlamos de esta manera si hay un estado de error etc\n            error && /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Desesperate, hubo un error...\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 16\n            }, this), loading && /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Estamos cargando, no desesperes...\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 51,\n              columnNumber: 19\n            }, this),\n            //Esto se comprende como el manejo de efectos dependeiendo del numero total se desprende un texto etc\n            !loading && !searchedTodos.length && /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Crea tu primer todo\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 46\n            }, this), searchedTodos.map(todo =>\n            /*#__PURE__*/\n            //Tomemos en cuenta que hay que tener un identificador de lista asi como un ID en abse de datos\n            _jsxDEV(TodoItem, {\n              text: todo.text\n              //Enviamos una nueva propiedad que se llame completed\n              ,\n              completed: todo.completed\n              //Enviamos las propiedas a nuestro componente para la actualizacion y re-renderizacion de todos\n              ,\n              onComplete: () => completeTodos(todo.text),\n              onDelete: () => deleteTodos(todo.text)\n            }, todo.text, false, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 11\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 9\n          }, this);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(CreateTodoButton, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 5\n    }, this)\n  );\n}\n_c = AppUI;\nexport { AppUI };\nvar _c;\n$RefreshReg$(_c, \"AppUI\");","map":{"version":3,"names":["React","TodoContext","TodoCounter","TodoItem","TodoSearch","TodoList","CreateTodoButton","TodoHeader","AppUI","error","loading","searchedTodos","completeTodos","deleteTodos","length","map","todo","text","completed"],"sources":["/home/jorgebg/personalProjects/cursoReact/cursoReactIntroduccion/todo-machine/src/App/AppUI.js"],"sourcesContent":["import React from \"react\";\nimport { TodoContext } from \"../TodoContext\";\nimport { TodoCounter } from '../TodoCounter';\nimport { TodoItem } from '../TodoItem';\nimport { TodoSearch } from '../TodoSearch';\nimport { TodoList } from '../TodoList';\nimport { CreateTodoButton } from '../CreateTodoButton';\nimport { TodoHeader } from '../TodoHeader';\n\n//Podemos tener un envolvimiento de propos con reactcontext\n\n\nfunction AppUI(){\n    return(\n    //Soporta un componente solamente\n    //Esta etiqueta nos funciona para calculos internos solo enviamos una etiqueta por componente envolver para quitar cantidad divs\n    //Para comentar o poner javascript con las {} claves\n    <React.Fragment>\n    {//Para evitar confusiones no se debe dar class si no que se da con class name evitar clases de js\n    //La magia de JSX es las propiedades que hay\n    <TodoHeader/>\n    //Poner nuestros elementos\n    //Todocounter es el que marcara el numero de todos completados\n    }\n    <TodoCounter/>\n\n    {//El input de busqueda que escribamos\n     //podemos crear a traves de react nuestra app principal los valores de estados de nuestra app\n    }\n    <TodoSearch/>\n    \n      \n    {//COntenedor de todos con lista\n    //Tenemos nuestro componente que sera el recursivo reutilizable, utilizando map rendrizando\n    //Podemos ocupar Consumer vamos a enviar funcion con renders\n    }\n    \n    <TodoContext.Consumer>\n    {/* Podemos observar que tenemos nuestros valores podemos para enviar esto sin necesidad de tener componentes */}\n    {({\n      error, \n      loading, \n      searchedTodos, \n      completeTodos, \n      deleteTodos}) =>{\n      return(\n        <TodoList>\n      {\n      //Controlamos de esta manera si hay un estado de error etc\n      error && <p>Desesperate, hubo un error...</p>}\n      {loading && <p>Estamos cargando, no desesperes...</p>}\n      {\n      //Esto se comprende como el manejo de efectos dependeiendo del numero total se desprende un texto etc\n      (!loading && !searchedTodos.length) && <p>Crea tu primer todo</p>\n      } \n\n    {searchedTodos.map(todo => (\n          //Tomemos en cuenta que hay que tener un identificador de lista asi como un ID en abse de datos\n          <TodoItem \n          key={todo.text} \n          text={todo.text}\n          //Enviamos una nueva propiedad que se llame completed\n          completed={todo.completed}\n          //Enviamos las propiedas a nuestro componente para la actualizacion y re-renderizacion de todos\n          onComplete={() =>completeTodos(todo.text)}\n          onDelete={() =>deleteTodos(todo.text)}\n          />\n     ))}\n      \n    </TodoList>\n      );\n    }}\n\n    </TodoContext.Consumer>\n\n    <CreateTodoButton/>\n    </React.Fragment>\n    );\n}\n\nexport { AppUI };"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,WAAW,QAAQ,gBAAgB;AAC5C,SAASC,WAAW,QAAQ,gBAAgB;AAC5C,SAASC,QAAQ,QAAQ,aAAa;AACtC,SAASC,UAAU,QAAQ,eAAe;AAC1C,SAASC,QAAQ,QAAQ,aAAa;AACtC,SAASC,gBAAgB,QAAQ,qBAAqB;AACtD,SAASC,UAAU,QAAQ,eAAe;;AAE1C;AAAA;AAGA,SAASC,KAAK,GAAE;EACZ;IAAA;IACA;IACA;IACA;IACA,QAAC,KAAK,CAAC,QAAQ;MAAA;MAAA;MACd;MACD;MACA,QAAC,UAAU;QAAA;QAAA;QAAA;MAAA;MACX;MACA;MAAA,eAEA,QAAC,WAAW;QAAA;QAAA;QAAA;MAAA,QAAE,eAKd,QAAC,UAAU;QAAA;QAAA;QAAA;MAAA,QAAE,eAQb,QAAC,WAAW,CAAC,QAAQ;QAAA,UAEpB,QAKiB;UAAA,IALhB;YACAC,KAAK;YACLC,OAAO;YACPC,aAAa;YACbC,aAAa;YACbC;UAAW,CAAC;UACZ,oBACE,QAAC,QAAQ;YAAA;YAEX;YACAJ,KAAK,iBAAI;cAAA,UAAG;YAA6B;cAAA;cAAA;cAAA;YAAA,QAAI,EAC5CC,OAAO,iBAAI;cAAA,UAAG;YAAkC;cAAA;cAAA;cAAA;YAAA,QAAI;YAErD;YACC,CAACA,OAAO,IAAI,CAACC,aAAa,CAACG,MAAM,iBAAK;cAAA,UAAG;YAAmB;cAAA;cAAA;cAAA;YAAA,QAAI,EAGlEH,aAAa,CAACI,GAAG,CAACC,IAAI;YAAA;YACjB;YACA,QAAC,QAAQ;cAET,IAAI,EAAEA,IAAI,CAACC;cACX;cAAA;cACA,SAAS,EAAED,IAAI,CAACE;cAChB;cAAA;cACA,UAAU,EAAE,MAAKN,aAAa,CAACI,IAAI,CAACC,IAAI,CAAE;cAC1C,QAAQ,EAAE,MAAKJ,WAAW,CAACG,IAAI,CAACC,IAAI;YAAE,GANjCD,IAAI,CAACC,IAAI;cAAA;cAAA;cAAA;YAAA,QAQlB,CAAC;UAAA;YAAA;YAAA;YAAA;UAAA,QAEQ;QAEX;MAAC;QAAA;QAAA;QAAA;MAAA,QAEsB,eAEvB,QAAC,gBAAgB;QAAA;QAAA;QAAA;MAAA,QAAE;IAAA;MAAA;MAAA;MAAA;IAAA;EACF;AAErB;AAAC,KAlEQT,KAAK;AAoEd,SAASA,KAAK;AAAG;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}