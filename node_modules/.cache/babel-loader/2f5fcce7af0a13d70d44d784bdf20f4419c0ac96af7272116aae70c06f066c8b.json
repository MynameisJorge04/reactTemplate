{"ast":null,"code":"var _jsxFileName = \"/home/jorgebg/personalProjects/cursoReact/cursoReactIntroduccion/todo-machine/src/App/AppUI.js\";\nimport React from \"react\";\nimport { TodoCounter } from '../TodoCounter';\nimport { TodoItem } from '../TodoItem';\nimport { TodoSearch } from '../TodoSearch';\nimport { TodoList } from '../TodoList';\nimport { CreateTodoButton } from '../CreateTodoButton';\nimport { TodoHeader } from '../TodoHeader';\n\n//Podemos tener un envolvimiento de propos con reactcontext\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction AppUI(_ref) {\n  let {\n    loading,\n    error,\n    totalTodos,\n    completedTodos,\n    searchValue,\n    setSearchValue,\n    searchedTodos,\n    completeTodos,\n    deleteTodos\n  } = _ref;\n  return (\n    /*#__PURE__*/\n    //Soporta un componente solamente\n    //Esta etiqueta nos funciona para calculos internos solo enviamos una etiqueta por componente envolver para quitar cantidad divs\n    //Para comentar o poner javascript con las {} claves\n    _jsxDEV(React.Fragment, {\n      children: [\n      /*#__PURE__*/\n      //Para evitar confusiones no se debe dar class si no que se da con class name evitar clases de js\n      //La magia de JSX es las propiedades que hay\n      _jsxDEV(TodoHeader, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 5\n      }, this)\n      //Poner nuestros elementos\n      //Todocounter es el que marcara el numero de todos completados\n      , /*#__PURE__*/_jsxDEV(TodoCounter, {\n        total: totalTodos,\n        completed: completedTodos\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(TodoSearch, {\n        searchValue: searchValue,\n        setSearchValue: setSearchValue\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(TodoList, {\n        children: [\n        //Controlamos de esta manera si hay un estado de error etc\n        error && /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Desesperate, hubo un error...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 16\n        }, this), loading && /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Estamos cargando, no desesperes...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 19\n        }, this),\n        //Esto se comprende como el manejo de efectos dependeiendo del numero total se desprende un texto etc\n        !loading && !searchedTodos.length && /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Crea tu primer todo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 46\n        }, this), searchedTodos.map(todo =>\n        /*#__PURE__*/\n        //Tomemos en cuenta que hay que tener un identificador de lista asi como un ID en abse de datos\n        _jsxDEV(TodoItem, {\n          text: todo.text\n          //Enviamos una nueva propiedad que se llame completed\n          ,\n          completed: todo.completed\n          //Enviamos las propiedas a nuestro componente para la actualizacion y re-renderizacion de todos\n          ,\n          onComplete: () => completeTodos(todo.text),\n          onDelete: () => deleteTodos(todo.text)\n        }, todo.text, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(CreateTodoButton, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 5\n    }, this)\n  );\n}\n_c = AppUI;\nexport { AppUI };\nvar _c;\n$RefreshReg$(_c, \"AppUI\");","map":{"version":3,"names":["React","TodoCounter","TodoItem","TodoSearch","TodoList","CreateTodoButton","TodoHeader","AppUI","loading","error","totalTodos","completedTodos","searchValue","setSearchValue","searchedTodos","completeTodos","deleteTodos","length","map","todo","text","completed"],"sources":["/home/jorgebg/personalProjects/cursoReact/cursoReactIntroduccion/todo-machine/src/App/AppUI.js"],"sourcesContent":["import React from \"react\";\nimport { TodoCounter } from '../TodoCounter';\nimport { TodoItem } from '../TodoItem';\nimport { TodoSearch } from '../TodoSearch';\nimport { TodoList } from '../TodoList';\nimport { CreateTodoButton } from '../CreateTodoButton';\nimport { TodoHeader } from '../TodoHeader';\n\n//Podemos tener un envolvimiento de propos con reactcontext\n\n\nfunction AppUI({\n     loading,\n     error,\n     totalTodos,\n     completedTodos,\n     searchValue,\n     setSearchValue,\n     searchedTodos,\n     completeTodos,\n     deleteTodos,\n    }){\n    return(\n    //Soporta un componente solamente\n    //Esta etiqueta nos funciona para calculos internos solo enviamos una etiqueta por componente envolver para quitar cantidad divs\n    //Para comentar o poner javascript con las {} claves\n    <React.Fragment>\n    {//Para evitar confusiones no se debe dar class si no que se da con class name evitar clases de js\n    //La magia de JSX es las propiedades que hay\n    <TodoHeader/>\n    //Poner nuestros elementos\n    //Todocounter es el que marcara el numero de todos completados\n    }\n    <TodoCounter\n    total={totalTodos}\n    completed={completedTodos}\n    />\n\n    {//El input de busqueda que escribamos\n     //podemos crear a traves de react nuestra app principal los valores de estados de nuestra app\n    }\n    <TodoSearch\n      searchValue={searchValue}\n      setSearchValue={setSearchValue}\n    />\n    \n      \n    {//COntenedor de todos con lista\n    //Tenemos nuestro componente que sera el recursivo reutilizable, utilizando map rendrizando\n    }\n    <TodoList>\n      {\n      //Controlamos de esta manera si hay un estado de error etc\n      error && <p>Desesperate, hubo un error...</p>}\n      {loading && <p>Estamos cargando, no desesperes...</p>}\n      {\n      //Esto se comprende como el manejo de efectos dependeiendo del numero total se desprende un texto etc\n      (!loading && !searchedTodos.length) && <p>Crea tu primer todo</p>\n      } \n\n    {searchedTodos.map(todo => (\n          //Tomemos en cuenta que hay que tener un identificador de lista asi como un ID en abse de datos\n          <TodoItem \n          key={todo.text} \n          text={todo.text}\n          //Enviamos una nueva propiedad que se llame completed\n          completed={todo.completed}\n          //Enviamos las propiedas a nuestro componente para la actualizacion y re-renderizacion de todos\n          onComplete={() =>completeTodos(todo.text)}\n          onDelete={() =>deleteTodos(todo.text)}\n          />\n     ))}\n      \n    </TodoList>\n\n    <CreateTodoButton/>\n    </React.Fragment>\n    );\n}\n\nexport { AppUI };"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,WAAW,QAAQ,gBAAgB;AAC5C,SAASC,QAAQ,QAAQ,aAAa;AACtC,SAASC,UAAU,QAAQ,eAAe;AAC1C,SAASC,QAAQ,QAAQ,aAAa;AACtC,SAASC,gBAAgB,QAAQ,qBAAqB;AACtD,SAASC,UAAU,QAAQ,eAAe;;AAE1C;AAAA;AAGA,SAASC,KAAK,OAUR;EAAA,IAVS;IACVC,OAAO;IACPC,KAAK;IACLC,UAAU;IACVC,cAAc;IACdC,WAAW;IACXC,cAAc;IACdC,aAAa;IACbC,aAAa;IACbC;EACD,CAAC;EACD;IAAA;IACA;IACA;IACA;IACA,QAAC,KAAK,CAAC,QAAQ;MAAA;MAAA;MACd;MACD;MACA,QAAC,UAAU;QAAA;QAAA;QAAA;MAAA;MACX;MACA;MAAA,eAEA,QAAC,WAAW;QACZ,KAAK,EAAEN,UAAW;QAClB,SAAS,EAAEC;MAAe;QAAA;QAAA;QAAA;MAAA,QACxB,eAKF,QAAC,UAAU;QACT,WAAW,EAAEC,WAAY;QACzB,cAAc,EAAEC;MAAe;QAAA;QAAA;QAAA;MAAA,QAC/B,eAMF,QAAC,QAAQ;QAAA;QAEP;QACAJ,KAAK,iBAAI;UAAA,UAAG;QAA6B;UAAA;UAAA;UAAA;QAAA,QAAI,EAC5CD,OAAO,iBAAI;UAAA,UAAG;QAAkC;UAAA;UAAA;UAAA;QAAA,QAAI;QAErD;QACC,CAACA,OAAO,IAAI,CAACM,aAAa,CAACG,MAAM,iBAAK;UAAA,UAAG;QAAmB;UAAA;UAAA;UAAA;QAAA,QAAI,EAGlEH,aAAa,CAACI,GAAG,CAACC,IAAI;QAAA;QACjB;QACA,QAAC,QAAQ;UAET,IAAI,EAAEA,IAAI,CAACC;UACX;UAAA;UACA,SAAS,EAAED,IAAI,CAACE;UAChB;UAAA;UACA,UAAU,EAAE,MAAKN,aAAa,CAACI,IAAI,CAACC,IAAI,CAAE;UAC1C,QAAQ,EAAE,MAAKJ,WAAW,CAACG,IAAI,CAACC,IAAI;QAAE,GANjCD,IAAI,CAACC,IAAI;UAAA;UAAA;UAAA;QAAA,QAQlB,CAAC;MAAA;QAAA;QAAA;QAAA;MAAA,QAEQ,eAEX,QAAC,gBAAgB;QAAA;QAAA;QAAA;MAAA,QAAE;IAAA;MAAA;MAAA;MAAA;IAAA;EACF;AAErB;AAAC,KAnEQb,KAAK;AAqEd,SAASA,KAAK;AAAG;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}