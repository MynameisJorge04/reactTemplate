{"ast":null,"code":"var _jsxFileName = \"/home/jorgebg/personalProjects/cursoReact/cursoReactIntroduccion/todo-machine/src/App.js\";\n//pedimos a react que nos haga un paquete invisible\n//LLamamos a nuestro archivo todocounter\nimport React from 'react';\nimport { TodoCounter } from './TodoCounter.js';\n\n//import './App.css';\n\n//Ejemplo: tenemos una url \n//const url = \"https://.jpg\" podemos remplazar con el nombre de la variable\n\n//Esto se traduce a una clase en un div, que solo son llamados a react\n//Podemos obtener parametros de elementos desde nuestro index.js observamos que hay buenos\n//mensajes existentes\n\n//Lista falsa de todos\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst todos = [{\n  text: 'Cortar cebolla',\n  completed: false\n}, {\n  text: 'Tomar curso intro eact',\n  completed: false\n}, {\n  text: 'Llorar con la lloran',\n  completed: false\n}];\nfunction App() {\n  return (\n    /*#__PURE__*/\n    //Soporta un componente solamente\n    //Esta etiqueta nos funciona para calculos internos solo enviamos una etiqueta por componente envolver para quitar cantidad divs\n    //Para comentar o poner javascript con las {} claves\n    _jsxDEV(React.Fragment, {\n      children:\n      /*#__PURE__*/\n      //Para evitar confusiones no se debe dar class si no que se da con class name evitar clases de js\n      //La magia de JSX es las propiedades que hay\n      //Poner nuestros elementos\n      //Todocounter es el que marcara el numero de todos completados\n      _jsxDEV(TodoCounter, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 5\n      }, this)\n\n      //El input de busqueda que escribamos\n      //<TodoSearch/>\n\n      //COntenedor de todos con lista\n      //Tenemos nuestro componente que sera el recursivo reutilizable, utilizando map rendrizando\n      //<TodoList>\n\n      // {todos.map(todo => (\n      //</TodoList>   <TodoItem/>\n      //</React.Fragment> ))};\n\n      //</TodoList>\n\n      /*<CreateTodoButton/>*/\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 5\n    }, this)\n  );\n}\n\n//Encapsulamiento javascript\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","TodoCounter","todos","text","completed","App"],"sources":["/home/jorgebg/personalProjects/cursoReact/cursoReactIntroduccion/todo-machine/src/App.js"],"sourcesContent":["//pedimos a react que nos haga un paquete invisible\n//LLamamos a nuestro archivo todocounter\nimport React from 'react';\nimport { TodoCounter } from './TodoCounter.js';\n\n//import './App.css';\n\n//Ejemplo: tenemos una url \n//const url = \"https://.jpg\" podemos remplazar con el nombre de la variable\n\n//Esto se traduce a una clase en un div, que solo son llamados a react\n//Podemos obtener parametros de elementos desde nuestro index.js observamos que hay buenos\n//mensajes existentes\n\n//Lista falsa de todos\n\nconst todos = [\n  {text: 'Cortar cebolla', completed: false},\n  {text: 'Tomar curso intro eact', completed: false},\n  {text: 'Llorar con la lloran', completed: false}\n];\n\nfunction App() {\n  return (\n    //Soporta un componente solamente\n    //Esta etiqueta nos funciona para calculos internos solo enviamos una etiqueta por componente envolver para quitar cantidad divs\n    //Para comentar o poner javascript con las {} claves\n    <React.Fragment>\n    {//Para evitar confusiones no se debe dar class si no que se da con class name evitar clases de js\n    //La magia de JSX es las propiedades que hay\n\n    //Poner nuestros elementos\n    //Todocounter es el que marcara el numero de todos completados\n    <TodoCounter/>\n\n    //El input de busqueda que escribamos\n    //<TodoSearch/>\n\n    //COntenedor de todos con lista\n    //Tenemos nuestro componente que sera el recursivo reutilizable, utilizando map rendrizando\n    //<TodoList>\n      \n     // {todos.map(todo => (\n     //</TodoList>   <TodoItem/>\n     //</React.Fragment> ))};\n      \n    //</TodoList>\n\n    /*<CreateTodoButton/>*/}\n    </React.Fragment>\n    );\n\n    \n}\n\n//Encapsulamiento javascript\nexport default App;\n"],"mappings":";AAAA;AACA;AACA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,WAAW,QAAQ,kBAAkB;;AAE9C;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AAAA;AAEA,MAAMC,KAAK,GAAG,CACZ;EAACC,IAAI,EAAE,gBAAgB;EAAEC,SAAS,EAAE;AAAK,CAAC,EAC1C;EAACD,IAAI,EAAE,wBAAwB;EAAEC,SAAS,EAAE;AAAK,CAAC,EAClD;EAACD,IAAI,EAAE,sBAAsB;EAAEC,SAAS,EAAE;AAAK,CAAC,CACjD;AAED,SAASC,GAAG,GAAG;EACb;IAAA;IACE;IACA;IACA;IACA,QAAC,KAAK,CAAC,QAAQ;MAAA;MAAA;MACd;MACD;MAEA;MACA;MACA,QAAC,WAAW;QAAA;QAAA;QAAA;MAAA;;MAEZ;MACA;;MAEA;MACA;MACA;;MAEC;MACA;MACA;;MAED;;MAEA;IAAA;MAAA;MAAA;MAAA;IAAA;EACiB;AAIrB;;AAEA;AAAA,KAjCSA,GAAG;AAkCZ,eAAeA,GAAG;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}