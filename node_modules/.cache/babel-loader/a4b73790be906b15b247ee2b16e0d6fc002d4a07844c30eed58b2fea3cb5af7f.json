{"ast":null,"code":"var _jsxFileName = \"/home/jorgebg/personalProjects/cursoReact/cursoReactIntroduccion/todo-machine/src/TodoSearch.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport './TodoSearch.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction TodoSearch() {\n  _s();\n  //Esta es la forma de llamar a los estados para react con esto podemos tomar en cuenta la realizacion de  nuestro estado\n  const [searchValue, setSearchValue] = React.useState('');\n\n  //Obtenemos el valor de nuestro input esto es a traves de un parametro\n\n  const onSearchValueChange = event => {\n    //Esta propiedas saca a traves del metodoOnchange el valor que tiene el input con nuestro target\n    console.log(event.target.value);\n    setSearchValue(event.target.value);\n  };\n\n  //Esta es una forma de enviar componenetes o etiquetas para react en este caso lo hicimos con arrays:\n  return [/*#__PURE__*/_jsxDEV(\"input\", {\n    className: \"TodoSearch\",\n    placeholder: \"Buscar tareas\"\n    //Cada cambio que hay de un usuario propiedad de cambio\n    ,\n    onChange: onSearchValueChange\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 9\n  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n    children: patito\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 9\n  }, this)];\n}\n_s(TodoSearch, \"HM3Ln43XRFR/2uR77U2yFU1TAX4=\");\n_c = TodoSearch;\nexport { TodoSearch };\nvar _c;\n$RefreshReg$(_c, \"TodoSearch\");","map":{"version":3,"names":["React","TodoSearch","searchValue","setSearchValue","useState","onSearchValueChange","event","console","log","target","value","patito"],"sources":["/home/jorgebg/personalProjects/cursoReact/cursoReactIntroduccion/todo-machine/src/TodoSearch.js"],"sourcesContent":["import React from 'react';\nimport './TodoSearch.css'\n\nfunction TodoSearch(){\n\n    //Esta es la forma de llamar a los estados para react con esto podemos tomar en cuenta la realizacion de  nuestro estado\n    const [searchValue, setSearchValue] = React.useState('');\n\n    //Obtenemos el valor de nuestro input esto es a traves de un parametro\n    \n    const onSearchValueChange = (event) =>{\n        //Esta propiedas saca a traves del metodoOnchange el valor que tiene el input con nuestro target\n        console.log(event.target.value);\n        setSearchValue(event.target.value);\n    }\n\n    //Esta es una forma de enviar componenetes o etiquetas para react en este caso lo hicimos con arrays:\n    return[\n        <input \n        className='TodoSearch' placeholder=\"Buscar tareas\" \n        //Cada cambio que hay de un usuario propiedad de cambio\n        onChange={onSearchValueChange}\n        />,\n        <p>{patito}</p>\n    ];\n}\n\nexport { TodoSearch };"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAO,kBAAkB;AAAA;AAEzB,SAASC,UAAU,GAAE;EAAA;EAEjB;EACA,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGH,KAAK,CAACI,QAAQ,CAAC,EAAE,CAAC;;EAExD;;EAEA,MAAMC,mBAAmB,GAAIC,KAAK,IAAI;IAClC;IACAC,OAAO,CAACC,GAAG,CAACF,KAAK,CAACG,MAAM,CAACC,KAAK,CAAC;IAC/BP,cAAc,CAACG,KAAK,CAACG,MAAM,CAACC,KAAK,CAAC;EACtC,CAAC;;EAED;EACA,OAAM,cACF;IACA,SAAS,EAAC,YAAY;IAAC,WAAW,EAAC;IACnC;IAAA;IACA,QAAQ,EAAEL;EAAoB;IAAA;IAAA;IAAA;EAAA,QAC5B,eACF;IAAA,UAAIM;EAAM;IAAA;IAAA;IAAA;EAAA,QAAK,CAClB;AACL;AAAC,GAtBQV,UAAU;AAAA,KAAVA,UAAU;AAwBnB,SAASA,UAAU;AAAG;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}